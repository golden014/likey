type AddInterestPayload = record {
  user_id_source : blob;
  user_id_destination : blob;
  is_interested : bool;
  is_revealed : bool;
};
type Error = variant {
  NotFound : record { msg : text };
  InvalidPayloadData : record { msg : text };
};
type FilterAttribute = variant {
  Age : record { data_start : int32; data_end : int32 };
  Height : record { data_start : int32; data_end : int32 };
  Religion : record { data : text };
  Gender : record { data : text };
  Education : record { data : int32 };
};
type Hobby = record { name : text; user_id : blob };
type Interest = record {
  user_id_source : blob;
  user_id_destination : blob;
  is_interested : bool;
  is_revealed : bool;
};
type Result = variant { Ok : opt Interest; Err : Error };
type Result_1 = variant { Ok : opt User; Err : Error };
type Result_2 = variant { Ok : opt vec blob; Err : Error };
type Result_3 = variant { Ok : User; Err : Error };
type Result_4 = variant { Ok : opt Hobby; Err : Error };
type Result_5 = variant {
  Ok : opt vec record { text; FilterAttribute };
  Err : Error;
};
type UpdateIsInterestedPayload = record {
  user_id_source : blob;
  user_id_destination : blob;
  is_interested : bool;
};
type UpdateIsRevealedPayload = record {
  user_id_source : blob;
  user_id_destination : blob;
  is_revealed : bool;
};
type User = record {
  dob : text;
  height : int32;
  profile_picture_link : text;
  current_swipe : int32;
  likey_coin : int32;
  education : int32;
  swipe_filters : vec record { text; FilterAttribute };
  description : text;
  filter_access : bool;
  user_id : blob;
  gender : text;
  first_name : text;
  last_name : text;
  religion : text;
  photo_link : vec text;
};
type UserPayload = record {
  dob : text;
  height : int32;
  profile_picture_link : text;
  current_swipe : int32;
  likey_coin : int32;
  education : int32;
  swipe_filters : vec record { text; FilterAttribute };
  description : text;
  filter_access : bool;
  user_principal_id : blob;
  gender : text;
  first_name : text;
  last_name : text;
  religion : text;
  photo_link : vec text;
};
type UserProfilePayload = record {
  height : int32;
  profile_picture_link : text;
  education : int32;
  description : text;
  first_name : text;
  last_name : text;
  religion : text;
};
service : {
  add_interest : (AddInterestPayload) -> (Result);
  buy_filter_access : (blob) -> (Result_1);
  create_user : (UserPayload) -> (Result_1);
  generate_swipe_by_id : (blob) -> (Result_2) query;
  get_all_hobby_by_user_id : (blob) -> (vec Hobby) query;
  get_all_interest_by_user_id : (blob) -> (vec Interest) query;
  get_feeds : (blob) -> (Result_2);
  get_not_interested_history : (blob) -> (vec User) query;
  get_user : (blob) -> (Result_3) query;
  greet : (text) -> (text) query;
  test_date : () -> (text) query;
  test_get_age : (text) -> (int32) query;
  update_hobby : (Hobby) -> (Result_4);
  update_interest : (UpdateIsInterestedPayload) -> (Result);
  update_reveal : (UpdateIsRevealedPayload) -> (Result);
  update_swipe_filter : (blob, vec record { text; FilterAttribute }) -> (
      Result_5,
    );
  update_user : (blob, UserProfilePayload) -> (Result_3);
}
